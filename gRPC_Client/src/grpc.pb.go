// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: grpc.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AddUser_Request) Reset() {
	*x = AddUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUser_Request) ProtoMessage() {}

func (x *AddUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUser_Request.ProtoReflect.Descriptor instead.
func (*AddUser_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *AddUser_Request) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUser_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddUser_Response) Reset() {
	*x = AddUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUser_Response) ProtoMessage() {}

func (x *AddUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUser_Response.ProtoReflect.Descriptor instead.
func (*AddUser_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *AddUser_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type DelUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *DelUser_Request) Reset() {
	*x = DelUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUser_Request) ProtoMessage() {}

func (x *DelUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUser_Request.ProtoReflect.Descriptor instead.
func (*DelUser_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *DelUser_Request) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type DelUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DelUser_Response) Reset() {
	*x = DelUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUser_Response) ProtoMessage() {}

func (x *DelUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUser_Response.ProtoReflect.Descriptor instead.
func (*DelUser_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *DelUser_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AddGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *AddGroup_Request) Reset() {
	*x = AddGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroup_Request) ProtoMessage() {}

func (x *AddGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroup_Request.ProtoReflect.Descriptor instead.
func (*AddGroup_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *AddGroup_Request) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type AddGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddGroup_Response) Reset() {
	*x = AddGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroup_Response) ProtoMessage() {}

func (x *AddGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroup_Response.ProtoReflect.Descriptor instead.
func (*AddGroup_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *AddGroup_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type DelGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *DelGroup_Request) Reset() {
	*x = DelGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGroup_Request) ProtoMessage() {}

func (x *DelGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGroup_Request.ProtoReflect.Descriptor instead.
func (*DelGroup_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *DelGroup_Request) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type DelGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DelGroup_Response) Reset() {
	*x = DelGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGroup_Response) ProtoMessage() {}

func (x *DelGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGroup_Response.ProtoReflect.Descriptor instead.
func (*DelGroup_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *DelGroup_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AddUserToGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	User  string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AddUserToGroup_Request) Reset() {
	*x = AddUserToGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToGroup_Request) ProtoMessage() {}

func (x *AddUserToGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToGroup_Request.ProtoReflect.Descriptor instead.
func (*AddUserToGroup_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *AddUserToGroup_Request) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AddUserToGroup_Request) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type AddUserToGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddUserToGroup_Response) Reset() {
	*x = AddUserToGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToGroup_Response) ProtoMessage() {}

func (x *AddUserToGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToGroup_Response.ProtoReflect.Descriptor instead.
func (*AddUserToGroup_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *AddUserToGroup_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type DelUserToGroup_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	User  string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DelUserToGroup_Request) Reset() {
	*x = DelUserToGroup_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserToGroup_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserToGroup_Request) ProtoMessage() {}

func (x *DelUserToGroup_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserToGroup_Request.ProtoReflect.Descriptor instead.
func (*DelUserToGroup_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *DelUserToGroup_Request) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DelUserToGroup_Request) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type DelUserToGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DelUserToGroup_Response) Reset() {
	*x = DelUserToGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserToGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserToGroup_Response) ProtoMessage() {}

func (x *DelUserToGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserToGroup_Response.ProtoReflect.Descriptor instead.
func (*DelUserToGroup_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *DelUserToGroup_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetGroupList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupList_Request) Reset() {
	*x = GetGroupList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupList_Request) ProtoMessage() {}

func (x *GetGroupList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupList_Request.ProtoReflect.Descriptor instead.
func (*GetGroupList_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{12}
}

type GetGroupList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupList string `protobuf:"bytes,1,opt,name=GroupList,proto3" json:"GroupList,omitempty"`
}

func (x *GetGroupList_Response) Reset() {
	*x = GetGroupList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupList_Response) ProtoMessage() {}

func (x *GetGroupList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupList_Response.ProtoReflect.Descriptor instead.
func (*GetGroupList_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupList_Response) GetGroupList() string {
	if x != nil {
		return x.GroupList
	}
	return ""
}

type GetGroupUsers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupUsers_Request) Reset() {
	*x = GetGroupUsers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupUsers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupUsers_Request) ProtoMessage() {}

func (x *GetGroupUsers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupUsers_Request.ProtoReflect.Descriptor instead.
func (*GetGroupUsers_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupUsers_Request) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetGroupUsers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList string `protobuf:"bytes,1,opt,name=UserList,proto3" json:"UserList,omitempty"`
}

func (x *GetGroupUsers_Response) Reset() {
	*x = GetGroupUsers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupUsers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupUsers_Response) ProtoMessage() {}

func (x *GetGroupUsers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupUsers_Response.ProtoReflect.Descriptor instead.
func (*GetGroupUsers_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *GetGroupUsers_Response) GetUserList() string {
	if x != nil {
		return x.UserList
	}
	return ""
}

type GetUserGroups_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserGroups_Request) Reset() {
	*x = GetUserGroups_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroups_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroups_Request) ProtoMessage() {}

func (x *GetUserGroups_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroups_Request.ProtoReflect.Descriptor instead.
func (*GetUserGroups_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserGroups_Request) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetUserGroups_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UGroupList string `protobuf:"bytes,1,opt,name=uGroupList,proto3" json:"uGroupList,omitempty"`
}

func (x *GetUserGroups_Response) Reset() {
	*x = GetUserGroups_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroups_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroups_Response) ProtoMessage() {}

func (x *GetUserGroups_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroups_Response.ProtoReflect.Descriptor instead.
func (*GetUserGroups_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserGroups_Response) GetUGroupList() string {
	if x != nil {
		return x.UGroupList
	}
	return ""
}

type SetUserActive_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	BActive int32  `protobuf:"varint,2,opt,name=bActive,proto3" json:"bActive,omitempty"`
}

func (x *SetUserActive_Request) Reset() {
	*x = SetUserActive_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserActive_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserActive_Request) ProtoMessage() {}

func (x *SetUserActive_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserActive_Request.ProtoReflect.Descriptor instead.
func (*SetUserActive_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *SetUserActive_Request) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SetUserActive_Request) GetBActive() int32 {
	if x != nil {
		return x.BActive
	}
	return 0
}

type SetUserActive_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserActive_Response) Reset() {
	*x = SetUserActive_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserActive_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserActive_Response) ProtoMessage() {}

func (x *SetUserActive_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserActive_Response.ProtoReflect.Descriptor instead.
func (*SetUserActive_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *SetUserActive_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SetUserPassword_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *SetUserPassword_Request) Reset() {
	*x = SetUserPassword_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPassword_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPassword_Request) ProtoMessage() {}

func (x *SetUserPassword_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPassword_Request.ProtoReflect.Descriptor instead.
func (*SetUserPassword_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *SetUserPassword_Request) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SetUserPassword_Request) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *SetUserPassword_Request) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type SetUserPassword_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserPassword_Response) Reset() {
	*x = SetUserPassword_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPassword_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPassword_Response) ProtoMessage() {}

func (x *SetUserPassword_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPassword_Response.ProtoReflect.Descriptor instead.
func (*SetUserPassword_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *SetUserPassword_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SetUserPasswordAdmin_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserPassword string `protobuf:"bytes,2,opt,name=UserPassword,proto3" json:"UserPassword,omitempty"`
}

func (x *SetUserPasswordAdmin_Request) Reset() {
	*x = SetUserPasswordAdmin_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPasswordAdmin_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPasswordAdmin_Request) ProtoMessage() {}

func (x *SetUserPasswordAdmin_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPasswordAdmin_Request.ProtoReflect.Descriptor instead.
func (*SetUserPasswordAdmin_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *SetUserPasswordAdmin_Request) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SetUserPasswordAdmin_Request) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type SetUserPasswordAdmin_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserPasswordAdmin_Response) Reset() {
	*x = SetUserPasswordAdmin_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPasswordAdmin_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPasswordAdmin_Response) ProtoMessage() {}

func (x *SetUserPasswordAdmin_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPasswordAdmin_Response.ProtoReflect.Descriptor instead.
func (*SetUserPasswordAdmin_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *SetUserPasswordAdmin_Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ReturnErrInfo_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ReturnErrInfo_Request) Reset() {
	*x = ReturnErrInfo_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnErrInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnErrInfo_Request) ProtoMessage() {}

func (x *ReturnErrInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnErrInfo_Request.ProtoReflect.Descriptor instead.
func (*ReturnErrInfo_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *ReturnErrInfo_Request) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ReturnErrInfo_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RCode     int32  `protobuf:"varint,1,opt,name=rCode,proto3" json:"rCode,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
}

func (x *ReturnErrInfo_Response) Reset() {
	*x = ReturnErrInfo_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnErrInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnErrInfo_Response) ProtoMessage() {}

func (x *ReturnErrInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnErrInfo_Response.ProtoReflect.Descriptor instead.
func (*ReturnErrInfo_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *ReturnErrInfo_Response) GetRCode() int32 {
	if x != nil {
		return x.RCode
	}
	return 0
}

func (x *ReturnErrInfo_Response) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

type AddUserPlus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName   string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	GroupName1 string `protobuf:"bytes,3,opt,name=groupName1,proto3" json:"groupName1,omitempty"`
	GroupName2 string `protobuf:"bytes,4,opt,name=groupName2,proto3" json:"groupName2,omitempty"`
}

func (x *AddUserPlus_Request) Reset() {
	*x = AddUserPlus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserPlus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserPlus_Request) ProtoMessage() {}

func (x *AddUserPlus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserPlus_Request.ProtoReflect.Descriptor instead.
func (*AddUserPlus_Request) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *AddUserPlus_Request) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserPlus_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserPlus_Request) GetGroupName1() string {
	if x != nil {
		return x.GroupName1
	}
	return ""
}

func (x *AddUserPlus_Request) GetGroupName2() string {
	if x != nil {
		return x.GroupName2
	}
	return ""
}

type AddUserPlus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RCode int32 `protobuf:"varint,1,opt,name=rCode,proto3" json:"rCode,omitempty"`
}

func (x *AddUserPlus_Response) Reset() {
	*x = AddUserPlus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserPlus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserPlus_Response) ProtoMessage() {}

func (x *AddUserPlus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserPlus_Response.ProtoReflect.Descriptor instead.
func (*AddUserPlus_Response) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{27}
}

func (x *AddUserPlus_Response) GetRCode() int32 {
	if x != nil {
		return x.RCode
	}
	return 0
}

var File_grpc_proto protoreflect.FileDescriptor

var file_grpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0x49, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x26, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x1d, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a,
	0x16, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x22, 0x2c, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x8f, 0x08, 0x0a, 0x0f, 0x49, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x08, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x6c, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c,
	0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData = file_grpc_proto_rawDesc
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_rawDescData)
	})
	return file_grpc_proto_rawDescData
}

var file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_grpc_proto_goTypes = []interface{}{
	(*AddUser_Request)(nil),               // 0: main.AddUser_Request
	(*AddUser_Response)(nil),              // 1: main.AddUser_Response
	(*DelUser_Request)(nil),               // 2: main.DelUser_Request
	(*DelUser_Response)(nil),              // 3: main.DelUser_Response
	(*AddGroup_Request)(nil),              // 4: main.AddGroup_Request
	(*AddGroup_Response)(nil),             // 5: main.AddGroup_Response
	(*DelGroup_Request)(nil),              // 6: main.DelGroup_Request
	(*DelGroup_Response)(nil),             // 7: main.DelGroup_Response
	(*AddUserToGroup_Request)(nil),        // 8: main.AddUserToGroup_Request
	(*AddUserToGroup_Response)(nil),       // 9: main.AddUserToGroup_Response
	(*DelUserToGroup_Request)(nil),        // 10: main.DelUserToGroup_Request
	(*DelUserToGroup_Response)(nil),       // 11: main.DelUserToGroup_Response
	(*GetGroupList_Request)(nil),          // 12: main.GetGroupList_Request
	(*GetGroupList_Response)(nil),         // 13: main.GetGroupList_Response
	(*GetGroupUsers_Request)(nil),         // 14: main.GetGroupUsers_Request
	(*GetGroupUsers_Response)(nil),        // 15: main.GetGroupUsers_Response
	(*GetUserGroups_Request)(nil),         // 16: main.GetUserGroups_Request
	(*GetUserGroups_Response)(nil),        // 17: main.GetUserGroups_Response
	(*SetUserActive_Request)(nil),         // 18: main.SetUserActive_Request
	(*SetUserActive_Response)(nil),        // 19: main.SetUserActive_Response
	(*SetUserPassword_Request)(nil),       // 20: main.SetUserPassword_Request
	(*SetUserPassword_Response)(nil),      // 21: main.SetUserPassword_Response
	(*SetUserPasswordAdmin_Request)(nil),  // 22: main.SetUserPasswordAdmin_Request
	(*SetUserPasswordAdmin_Response)(nil), // 23: main.SetUserPasswordAdmin_Response
	(*ReturnErrInfo_Request)(nil),         // 24: main.ReturnErrInfo_Request
	(*ReturnErrInfo_Response)(nil),        // 25: main.ReturnErrInfo_Response
	(*AddUserPlus_Request)(nil),           // 26: main.AddUserPlus_Request
	(*AddUserPlus_Response)(nil),          // 27: main.AddUserPlus_Response
}
var file_grpc_proto_depIdxs = []int32{
	0,  // 0: main.IUserRPCService.AddUser:input_type -> main.AddUser_Request
	2,  // 1: main.IUserRPCService.DelUser:input_type -> main.DelUser_Request
	4,  // 2: main.IUserRPCService.AddGroup:input_type -> main.AddGroup_Request
	6,  // 3: main.IUserRPCService.DelGroup:input_type -> main.DelGroup_Request
	8,  // 4: main.IUserRPCService.AddUserToGroup:input_type -> main.AddUserToGroup_Request
	10, // 5: main.IUserRPCService.DelUserToGroup:input_type -> main.DelUserToGroup_Request
	12, // 6: main.IUserRPCService.GetGroupList:input_type -> main.GetGroupList_Request
	14, // 7: main.IUserRPCService.GetGroupUsers:input_type -> main.GetGroupUsers_Request
	16, // 8: main.IUserRPCService.GetUserGroups:input_type -> main.GetUserGroups_Request
	18, // 9: main.IUserRPCService.SetUserActive:input_type -> main.SetUserActive_Request
	20, // 10: main.IUserRPCService.SetUserPassword:input_type -> main.SetUserPassword_Request
	22, // 11: main.IUserRPCService.SetUserPasswordAdmin:input_type -> main.SetUserPasswordAdmin_Request
	24, // 12: main.IUserRPCService.ReturnErrInfo:input_type -> main.ReturnErrInfo_Request
	26, // 13: main.IUserRPCService.AddUserPlus:input_type -> main.AddUserPlus_Request
	1,  // 14: main.IUserRPCService.AddUser:output_type -> main.AddUser_Response
	3,  // 15: main.IUserRPCService.DelUser:output_type -> main.DelUser_Response
	5,  // 16: main.IUserRPCService.AddGroup:output_type -> main.AddGroup_Response
	7,  // 17: main.IUserRPCService.DelGroup:output_type -> main.DelGroup_Response
	9,  // 18: main.IUserRPCService.AddUserToGroup:output_type -> main.AddUserToGroup_Response
	11, // 19: main.IUserRPCService.DelUserToGroup:output_type -> main.DelUserToGroup_Response
	13, // 20: main.IUserRPCService.GetGroupList:output_type -> main.GetGroupList_Response
	15, // 21: main.IUserRPCService.GetGroupUsers:output_type -> main.GetGroupUsers_Response
	17, // 22: main.IUserRPCService.GetUserGroups:output_type -> main.GetUserGroups_Response
	19, // 23: main.IUserRPCService.SetUserActive:output_type -> main.SetUserActive_Response
	21, // 24: main.IUserRPCService.SetUserPassword:output_type -> main.SetUserPassword_Response
	23, // 25: main.IUserRPCService.SetUserPasswordAdmin:output_type -> main.SetUserPasswordAdmin_Response
	25, // 26: main.IUserRPCService.ReturnErrInfo:output_type -> main.ReturnErrInfo_Response
	27, // 27: main.IUserRPCService.AddUserPlus:output_type -> main.AddUserPlus_Response
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserToGroup_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserToGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupUsers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupUsers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroups_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroups_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserActive_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserActive_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPassword_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPassword_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPasswordAdmin_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPasswordAdmin_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnErrInfo_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnErrInfo_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserPlus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserPlus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_rawDesc = nil
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IUserRPCServiceClient is the client API for IUserRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IUserRPCServiceClient interface {
	AddUser(ctx context.Context, in *AddUser_Request, opts ...grpc.CallOption) (*AddUser_Response, error)
	DelUser(ctx context.Context, in *DelUser_Request, opts ...grpc.CallOption) (*DelUser_Response, error)
	AddGroup(ctx context.Context, in *AddGroup_Request, opts ...grpc.CallOption) (*AddGroup_Response, error)
	DelGroup(ctx context.Context, in *DelGroup_Request, opts ...grpc.CallOption) (*DelGroup_Response, error)
	AddUserToGroup(ctx context.Context, in *AddUserToGroup_Request, opts ...grpc.CallOption) (*AddUserToGroup_Response, error)
	DelUserToGroup(ctx context.Context, in *DelUserToGroup_Request, opts ...grpc.CallOption) (*DelUserToGroup_Response, error)
	GetGroupList(ctx context.Context, in *GetGroupList_Request, opts ...grpc.CallOption) (*GetGroupList_Response, error)
	GetGroupUsers(ctx context.Context, in *GetGroupUsers_Request, opts ...grpc.CallOption) (*GetGroupUsers_Response, error)
	GetUserGroups(ctx context.Context, in *GetUserGroups_Request, opts ...grpc.CallOption) (*GetUserGroups_Response, error)
	SetUserActive(ctx context.Context, in *SetUserActive_Request, opts ...grpc.CallOption) (*SetUserActive_Response, error)
	SetUserPassword(ctx context.Context, in *SetUserPassword_Request, opts ...grpc.CallOption) (*SetUserPassword_Response, error)
	SetUserPasswordAdmin(ctx context.Context, in *SetUserPasswordAdmin_Request, opts ...grpc.CallOption) (*SetUserPasswordAdmin_Response, error)
	ReturnErrInfo(ctx context.Context, in *ReturnErrInfo_Request, opts ...grpc.CallOption) (*ReturnErrInfo_Response, error)
	AddUserPlus(ctx context.Context, in *AddUserPlus_Request, opts ...grpc.CallOption) (*AddUserPlus_Response, error)
}

type iUserRPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIUserRPCServiceClient(cc grpc.ClientConnInterface) IUserRPCServiceClient {
	return &iUserRPCServiceClient{cc}
}

func (c *iUserRPCServiceClient) AddUser(ctx context.Context, in *AddUser_Request, opts ...grpc.CallOption) (*AddUser_Response, error) {
	out := new(AddUser_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) DelUser(ctx context.Context, in *DelUser_Request, opts ...grpc.CallOption) (*DelUser_Response, error) {
	out := new(DelUser_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/DelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) AddGroup(ctx context.Context, in *AddGroup_Request, opts ...grpc.CallOption) (*AddGroup_Response, error) {
	out := new(AddGroup_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/AddGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) DelGroup(ctx context.Context, in *DelGroup_Request, opts ...grpc.CallOption) (*DelGroup_Response, error) {
	out := new(DelGroup_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/DelGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) AddUserToGroup(ctx context.Context, in *AddUserToGroup_Request, opts ...grpc.CallOption) (*AddUserToGroup_Response, error) {
	out := new(AddUserToGroup_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/AddUserToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) DelUserToGroup(ctx context.Context, in *DelUserToGroup_Request, opts ...grpc.CallOption) (*DelUserToGroup_Response, error) {
	out := new(DelUserToGroup_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/DelUserToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) GetGroupList(ctx context.Context, in *GetGroupList_Request, opts ...grpc.CallOption) (*GetGroupList_Response, error) {
	out := new(GetGroupList_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/GetGroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) GetGroupUsers(ctx context.Context, in *GetGroupUsers_Request, opts ...grpc.CallOption) (*GetGroupUsers_Response, error) {
	out := new(GetGroupUsers_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/GetGroupUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) GetUserGroups(ctx context.Context, in *GetUserGroups_Request, opts ...grpc.CallOption) (*GetUserGroups_Response, error) {
	out := new(GetUserGroups_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/GetUserGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) SetUserActive(ctx context.Context, in *SetUserActive_Request, opts ...grpc.CallOption) (*SetUserActive_Response, error) {
	out := new(SetUserActive_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/SetUserActive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) SetUserPassword(ctx context.Context, in *SetUserPassword_Request, opts ...grpc.CallOption) (*SetUserPassword_Response, error) {
	out := new(SetUserPassword_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/SetUserPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) SetUserPasswordAdmin(ctx context.Context, in *SetUserPasswordAdmin_Request, opts ...grpc.CallOption) (*SetUserPasswordAdmin_Response, error) {
	out := new(SetUserPasswordAdmin_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/SetUserPasswordAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) ReturnErrInfo(ctx context.Context, in *ReturnErrInfo_Request, opts ...grpc.CallOption) (*ReturnErrInfo_Response, error) {
	out := new(ReturnErrInfo_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/ReturnErrInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iUserRPCServiceClient) AddUserPlus(ctx context.Context, in *AddUserPlus_Request, opts ...grpc.CallOption) (*AddUserPlus_Response, error) {
	out := new(AddUserPlus_Response)
	err := c.cc.Invoke(ctx, "/main.IUserRPCService/AddUserPlus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IUserRPCServiceServer is the server API for IUserRPCService service.
type IUserRPCServiceServer interface {
	AddUser(context.Context, *AddUser_Request) (*AddUser_Response, error)
	DelUser(context.Context, *DelUser_Request) (*DelUser_Response, error)
	AddGroup(context.Context, *AddGroup_Request) (*AddGroup_Response, error)
	DelGroup(context.Context, *DelGroup_Request) (*DelGroup_Response, error)
	AddUserToGroup(context.Context, *AddUserToGroup_Request) (*AddUserToGroup_Response, error)
	DelUserToGroup(context.Context, *DelUserToGroup_Request) (*DelUserToGroup_Response, error)
	GetGroupList(context.Context, *GetGroupList_Request) (*GetGroupList_Response, error)
	GetGroupUsers(context.Context, *GetGroupUsers_Request) (*GetGroupUsers_Response, error)
	GetUserGroups(context.Context, *GetUserGroups_Request) (*GetUserGroups_Response, error)
	SetUserActive(context.Context, *SetUserActive_Request) (*SetUserActive_Response, error)
	SetUserPassword(context.Context, *SetUserPassword_Request) (*SetUserPassword_Response, error)
	SetUserPasswordAdmin(context.Context, *SetUserPasswordAdmin_Request) (*SetUserPasswordAdmin_Response, error)
	ReturnErrInfo(context.Context, *ReturnErrInfo_Request) (*ReturnErrInfo_Response, error)
	AddUserPlus(context.Context, *AddUserPlus_Request) (*AddUserPlus_Response, error)
}

// UnimplementedIUserRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIUserRPCServiceServer struct {
}

func (*UnimplementedIUserRPCServiceServer) AddUser(context.Context, *AddUser_Request) (*AddUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedIUserRPCServiceServer) DelUser(context.Context, *DelUser_Request) (*DelUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelUser not implemented")
}
func (*UnimplementedIUserRPCServiceServer) AddGroup(context.Context, *AddGroup_Request) (*AddGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGroup not implemented")
}
func (*UnimplementedIUserRPCServiceServer) DelGroup(context.Context, *DelGroup_Request) (*DelGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelGroup not implemented")
}
func (*UnimplementedIUserRPCServiceServer) AddUserToGroup(context.Context, *AddUserToGroup_Request) (*AddUserToGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserToGroup not implemented")
}
func (*UnimplementedIUserRPCServiceServer) DelUserToGroup(context.Context, *DelUserToGroup_Request) (*DelUserToGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelUserToGroup not implemented")
}
func (*UnimplementedIUserRPCServiceServer) GetGroupList(context.Context, *GetGroupList_Request) (*GetGroupList_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupList not implemented")
}
func (*UnimplementedIUserRPCServiceServer) GetGroupUsers(context.Context, *GetGroupUsers_Request) (*GetGroupUsers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupUsers not implemented")
}
func (*UnimplementedIUserRPCServiceServer) GetUserGroups(context.Context, *GetUserGroups_Request) (*GetUserGroups_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserGroups not implemented")
}
func (*UnimplementedIUserRPCServiceServer) SetUserActive(context.Context, *SetUserActive_Request) (*SetUserActive_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserActive not implemented")
}
func (*UnimplementedIUserRPCServiceServer) SetUserPassword(context.Context, *SetUserPassword_Request) (*SetUserPassword_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPassword not implemented")
}
func (*UnimplementedIUserRPCServiceServer) SetUserPasswordAdmin(context.Context, *SetUserPasswordAdmin_Request) (*SetUserPasswordAdmin_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPasswordAdmin not implemented")
}
func (*UnimplementedIUserRPCServiceServer) ReturnErrInfo(context.Context, *ReturnErrInfo_Request) (*ReturnErrInfo_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnErrInfo not implemented")
}
func (*UnimplementedIUserRPCServiceServer) AddUserPlus(context.Context, *AddUserPlus_Request) (*AddUserPlus_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserPlus not implemented")
}

func RegisterIUserRPCServiceServer(s *grpc.Server, srv IUserRPCServiceServer) {
	s.RegisterService(&_IUserRPCService_serviceDesc, srv)
}

func _IUserRPCService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUser_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).AddUser(ctx, req.(*AddUser_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_DelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelUser_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).DelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/DelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).DelUser(ctx, req.(*DelUser_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_AddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).AddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/AddGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).AddGroup(ctx, req.(*AddGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_DelGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).DelGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/DelGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).DelGroup(ctx, req.(*DelGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_AddUserToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserToGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).AddUserToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/AddUserToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).AddUserToGroup(ctx, req.(*AddUserToGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_DelUserToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelUserToGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).DelUserToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/DelUserToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).DelUserToGroup(ctx, req.(*DelUserToGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_GetGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).GetGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/GetGroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).GetGroupList(ctx, req.(*GetGroupList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_GetGroupUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupUsers_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).GetGroupUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/GetGroupUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).GetGroupUsers(ctx, req.(*GetGroupUsers_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_GetUserGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserGroups_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).GetUserGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/GetUserGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).GetUserGroups(ctx, req.(*GetUserGroups_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_SetUserActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserActive_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).SetUserActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/SetUserActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).SetUserActive(ctx, req.(*SetUserActive_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_SetUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPassword_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).SetUserPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/SetUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).SetUserPassword(ctx, req.(*SetUserPassword_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_SetUserPasswordAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPasswordAdmin_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).SetUserPasswordAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/SetUserPasswordAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).SetUserPasswordAdmin(ctx, req.(*SetUserPasswordAdmin_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_ReturnErrInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnErrInfo_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).ReturnErrInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/ReturnErrInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).ReturnErrInfo(ctx, req.(*ReturnErrInfo_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _IUserRPCService_AddUserPlus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserPlus_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IUserRPCServiceServer).AddUserPlus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.IUserRPCService/AddUserPlus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IUserRPCServiceServer).AddUserPlus(ctx, req.(*AddUserPlus_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _IUserRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.IUserRPCService",
	HandlerType: (*IUserRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _IUserRPCService_AddUser_Handler,
		},
		{
			MethodName: "DelUser",
			Handler:    _IUserRPCService_DelUser_Handler,
		},
		{
			MethodName: "AddGroup",
			Handler:    _IUserRPCService_AddGroup_Handler,
		},
		{
			MethodName: "DelGroup",
			Handler:    _IUserRPCService_DelGroup_Handler,
		},
		{
			MethodName: "AddUserToGroup",
			Handler:    _IUserRPCService_AddUserToGroup_Handler,
		},
		{
			MethodName: "DelUserToGroup",
			Handler:    _IUserRPCService_DelUserToGroup_Handler,
		},
		{
			MethodName: "GetGroupList",
			Handler:    _IUserRPCService_GetGroupList_Handler,
		},
		{
			MethodName: "GetGroupUsers",
			Handler:    _IUserRPCService_GetGroupUsers_Handler,
		},
		{
			MethodName: "GetUserGroups",
			Handler:    _IUserRPCService_GetUserGroups_Handler,
		},
		{
			MethodName: "SetUserActive",
			Handler:    _IUserRPCService_SetUserActive_Handler,
		},
		{
			MethodName: "SetUserPassword",
			Handler:    _IUserRPCService_SetUserPassword_Handler,
		},
		{
			MethodName: "SetUserPasswordAdmin",
			Handler:    _IUserRPCService_SetUserPasswordAdmin_Handler,
		},
		{
			MethodName: "ReturnErrInfo",
			Handler:    _IUserRPCService_ReturnErrInfo_Handler,
		},
		{
			MethodName: "AddUserPlus",
			Handler:    _IUserRPCService_AddUserPlus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
